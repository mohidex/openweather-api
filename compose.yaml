services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn weather_wise.asgi:application --host 0.0.0.0 --port 8000 --reload
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app
          ignore:
            - locale/
        - action: rebuild
          path: requirements.txt
        - action: rebuild
          path: ./locale/bn/LC_MESSAGES/django.po
        - action: rebuild
          path: ./locale/de/LC_MESSAGES/django.po

    ports:
      - "8000:8000"
    environment:
      - DATABASE=postgres
      - PG_USER=openweather
      - PG_PASSWORD=openweather
      - PG_DB=openweather
      - PG_HOST=db
      - REDIS_HOST=redis
      - SECRET_KEY=django-insecure-secret-key
      - MIGRATE_ON_STARTUP=True
      - OPEN_WEATHER_API_KEY=<your-api-key>
      - CACHE_TIMEOUT_IN_MIN=10
    depends_on:
      - db
      - redis
  db:
    image: postgres:15.5-alpine
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=openweather
      - POSTGRES_PASSWORD=openweather
      - POSTGRES_DB=openweather
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openweather"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.4-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
